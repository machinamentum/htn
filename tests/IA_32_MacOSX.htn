
main : () -> void {

   import "platform/osx/i386/_exit.htn";
   import "platform/osx/i386/_write.htn";
   import "platform/osx/i386/_open.htn";
   import "platform/osx/i386/_close.htn";
   
   
   O_RDONLY  : const int = 0x0000;
   O_WRONLY  : const int = 0x0001;
   O_RDWR    : const int = 0x0002;
   O_ACCMODE : const int = 0x0003;
   
   O_CREATE  : const int = 0x0200;
   
   O_CLOEXEC : const int = 0x1000000;
   
   stdout : const int = 1;
   fmt_str : *char = "Hello World\n";
   bit_ops : int = O_CREATE | O_CLOEXEC | O_RDWR;
   fd : int = _open("test_file.txt", bit_ops, 0x0FFF);//RDRW user, system, groups file perms
   _write(fd, "Hello Wosrld\n", 13);
   _write(stdout, fmt_str, 12);
   in : int = 10;
   while (in < 10) {
      _write(1, "test\n", 5);
      ++in;
   }
   
   _close(fd);
   cdebug "main_test";
   _exit(-1);
   cdebug "main_test";
}


_start : plain () -> void {
   __asm__("push %ebp");
   __asm__("mov %esp, %ebp");
   main();
   cdebug "htn_ctr0_OSX_i386_start";
   __asm__("add $8, %esp");
   __asm__("pop %ebp");
   __asm__("sub $8, %esp");
   __asm__("mov $0, %eax");
   __asm__("push %eax");
   __asm__("mov $1, %eax");
   __asm__("int $0x80");
   cdebug "htn_ctr0_OSX_i386_start";
   
}

cdebug "global";